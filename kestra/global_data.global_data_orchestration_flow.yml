id: global_data_flow
namespace: global_data

inputs:
  - id: indicator
    type: STRING
    defaults: access_to_electricity.csv

tasks:
  - id: set_label
    type: io.kestra.plugin.core.execution.Labels
    labels:
      file: "{{ inputs.indicator }}"

  - id: download_github_csv
    type: io.kestra.plugin.scripts.shell.Commands
    outputFiles:
      - "*.csv"
    taskRunner:
      type: io.kestra.plugin.core.runner.Process
    commands:
      - wget https://raw.githubusercontent.com/Deljimae/Global_Data_Data-Engineering_Project-/main/dataset/{{ inputs.indicator }} -O {{ inputs.indicator }}

  - id: upload_to_s3
    type: io.kestra.plugin.aws.s3.Upload
    from: "{{ outputs.download_github_csv.outputFiles[inputs.indicator]}}"
    key: "raw_data/{{ inputs.indicator }}"

  - id: drop_external_data
    type: io.kestra.plugin.aws.athena.Query
    database: "{{ kv('AWS_ATHENA_DATABASE') }}"
    outputLocation: "s3://{{ kv('AWS_BUCKET_NAME') }}/athena_output/external/"
    query: |
      DROP TABLE IF  EXISTS global_indicators_ext;


  - id: create_athena_table
    type: io.kestra.plugin.aws.athena.Query
    database:  "{{ kv('AWS_ATHENA_DATABASE') }}"
    outputLocation: "s3://{{ kv('AWS_BUCKET_NAME') }}/athena_output/external/"
    query: |
      CREATE EXTERNAL TABLE IF NOT EXISTS global_indicators_ext (
        country_code string COMMENT 'A code for each country or region or combined regions',
        country_name string COMMENT 'Name of country or region or combined regions',
        year int            COMMENT 'Year of the referenced data',
        value double        COMMENT 'Actual value of the indicator'
      )
      ROW FORMAT SERDE 'org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe'
      WITH SERDEPROPERTIES ('field.delim' = ',', 'skip.header.line.count'='1')
      STORED AS INPUTFORMAT 'org.apache.hadoop.mapred.TextInputFormat' OUTPUTFORMAT 'org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat'
      LOCATION 's3://{{kv('AWS_BUCKET_NAME')}}/raw_data/'
      TBLPROPERTIES ('classification' = 'csv');





pluginDefaults:
  - type: io.kestra.plugin.aws
    values:
      accessKeyId: "{{kv('AWS_ACCESS_KEY_ID')}}"
      secretKeyId: "{{kv('AWS_SECRET_ACCESS_KEY')}}"
      region: "{{kv('AWS_REGION')}}"
      bucket: "{{kv('AWS_BUCKET_NAME')}}"
      database: "{{kv('AWS_ATHENA_DATABASE')}}"



    
    
